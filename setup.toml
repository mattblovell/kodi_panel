# --------------------------------------------------------------------
# Setup file for kodi_panel using 800x480 resolution
#
#   For documentation regarding TOML (Tom's Obvious Minimal Language),
#   see references at https://toml.io/en/
#
#   TOML is context sensitive, so the order of the entries below
#   (particularly the arrays of tables) DOES matter unfortunately.
#
# --------------------------------------------------------------------

# Specify the Kodi instance to query.  Use localhost if running on
# the same box as Kodi, otherwise specify a resolvable machine name or
# IP address.
#BASE_URL = "http://192.168.1.111:8080"
BASE_URL = "http://192.168.1.51:80"

# --------------------------------------------------------------------
#
# GPIO setup, display options
#

# Specify the size of the display in pixels.  These values get stored
# into a tuple within kodi_panel and MUST match how the display (or
# framebuffer) is configured.
DISPLAY_WIDTH  = 640
DISPLAY_HEIGHT = 480

# GPIO assignment for screen's touch interrupt (T_IRQ), using RPi.GPIO
# numbering.
#
# Assuming your display has a touchscreen with an active-low
# interrupt, find a pin that's unused by luma.  The touchscreen chip
# in my display has its own internal pullup resistor, so no GPIO
# pullup is needed.
#
# I found the following pins to work on the two SBCs.
#
#   Odroid C4:  GPIO19 (physical Pin 35)
#   RPi 3:      GPIO16 (physical Pin 36)
#
# Pin choices are fixed if using the header on the Waveshare displays
# to connect directly to GPIO pins:
#
#   Waveshare 3.5" LCD (B):  GPIO17 (physical pin 11)
#   Waveshare 4" HDMI (H):   GPIO25 (physical pin 22)
#
USE_TOUCH = false   # Set false to disable interrupt use
TOUCH_INT = 25

# On RPi Zero, the debounce time seems like it needs to be longer to
# avoid a single screen press being interpreted as two events.
# Other SBCs can leave this commented out.
# TOUCH_DEBOUNCE = 2000  # milliseconds

# The USE_BACKLIGHT boolean controls whether calls are made to
# luma.lcd at all to change backlight state.  Users with OLED displays
# (or using luma.core's linux_framebuffer) should set it to false.
#
# This variable should likely be set false if using the PWM control
# through sysfs files (as presently implemented in kodi_panel_fb.py).
#
# Note that the framebuffer version (kodi_panel_fb.py) may ignore or
# override this setting, in favor of the group below.
#
USE_BACKLIGHT = false

# Hardware PWM is available on many SBCs.  For the Raspberry Pi
# with new-ish kernels, one can add
#
#   dtoverlay=pwm_2chan
#
# to /boot/config.txt to get an appropriate kernel module loaded.
#
# The clock period below is expressed in nanoseconds (1e-9).  The
# brightness level is a float between 0 and 1.  Using 0 would yield no
# backlight, so that value isn't particularly useful.
#
# As of Dec 2020, only kodi_panel_fb.py examines these settings.
# They are not used within kodi_panel_display itself
#
USE_HW_PWM = false
HW_PWM_FREQ  = 1000000 # results in clock frequency of 1 kHz
HW_PWM_LEVEL = 0.55


# --------------------------------------------------------------------
#
# Info screens, colors, & fonts
#

# Audio and video screens are enabled and disabled separately.
ENABLE_AUDIO_SCREENS = true
ENABLE_VIDEO_SCREENS = true

# Should the idle status screen always be shown?  That could be
# desired if no touch interrupt is available.
ENABLE_IDLE_STATUS = true


# Paths to default thumbnails for audio and status screen.  These now
# get resized, to whatever is specified for the audio screen used.
KODI_THUMB      = "images/kodi_thumb.jpg"       # Kodi icon
DEFAULT_AUDIO   = "images/music_icon2_lg.png"   # standard music file w/o artwork
DEFAULT_AIRPLAY = "images/airplay_thumb.png"    # Airplay file w/o artwork


# Audio Layout Names
#
#   Specify the names of layouts that are available when playing an
#   audio file.  The strings used must correspond to those used within
#   the ALAYOUT dictionary defined below.
#
ALAYOUT_NAMES = [
	"A_DEFAULT",     # artwork, elapsed time, track info
	"A_FULLSCREEN",  # fullscreen cover only
	"A_FULL_PROG",   # fullscreen cover with vertical progress bar
	"A_NOTIME",      # similar to default, but dropping elapsed time
]

# Initial mode to use upon startup
ALAYOUT_INITIAL = "A_DEFAULT"


# Video Layout Names
#
#   Similar to audio screen modes above, except for the
#   following tidbit ...
#
#   Should the layout for video screens be auto-selected (within the
#   video_screens() function) based upon which InfoLabel fields are
#   populated?  If so, then set VLAYOUT_AUTOSELECT to true.
#
#   If that flag is set to true, then VLAYOUT_NAMES *MUST* be
#   populated with entries that match the heuristic if-then that is
#   used by video_screens().  Top-level entries must be as follows:
#
#     - Whatever VLAYOUT_INITIAL specifies below, for Movies
#     - "V_PVR", for PVR / Recorded TV shows
#     - "V_TV_SHOW", for Library TV shows
#
#   If that variable is to false or left undeclared, then video modes
#   just form a cycle that gets advanced via the touch interrupt, as
#   happens for the audio screens.
#
 VLAYOUT_AUTOSELECT = true


# Array of layout names
VLAYOUT_NAMES = [
	"V_DEFAULT",       # movie poster, movie name, elapsed time
	"V_FULLSCREEN",     # movie poster
	"V_PVR",
	"V_TV_SHOW",
	"V_MOVIE",
	"V_LIVETV"
]


# Initial mode to use upon startup
VLAYOUT_INITIAL = "V_DEFAULT"

#[STATUS_LAYOUT.thumb]
#[[V_LAYOUT.V_DEFAULT.fields]]

# Colors
#
#   Specify color names to use elsewhere.  To know whether this
#   dictionary needs to be consulted, all names MUST begin with
#   "color_".  Color references without those initial characters just
#   get passed through, without a lookup in this dictionary.
#
[COLORS]
 color_gray   = '#424242'    # progress bar background (used 'dimgrey' for a while)
 color_7S     = '#00FFD0'    # 7-Segment color (used 'SpringGreen' for a while)
 color_artist = 'yellow'     # artist name


# Font list
#
#   These entries create an array that kodi_panel processes at startup
#   time, pulling the fonts into Pillow.  The font name that is
#   assigned must match those that get used further below in the
#   layouts.
#
#   A "font_main" MUST be defined and successfully loaded!
#

# Standard fonts
[[fonts]]
  name = "font_main"
  path = "fonts/Roboto-Medium.ttf"
  size = 28
  encoding = 'unic'

[[fonts]]
  name = "font_bold"
  path = "fonts/RobotoCondensed-Regular.ttf"
  size = 40
  encoding = 'unic'

[[fonts]]
  name = "font_sm"
  path = "fonts/Roboto-Medium.ttf"
  size = 30
  encoding = 'unic'

[[fonts]]
  name = "font_tiny"
  path = "fonts/Roboto-Medium.ttf"
  size = 22
  encoding = 'unic'

# 7-segment font used for elapsed time and track number
[[fonts]]
  name = "font7S"
  path = "fonts/DSEG14Classic-Regular.ttf"
  size = 58

[[fonts]]
  name = "font7S_sm"
  path = "fonts/DSEG14Classic-Regular.ttf"
  size = 22


# --------------------------------------------------------------------
# Audio Screens
#
#   This data structure gets used by audio_screens() to control the
#   layout and contents of any audio information screens.  Content can
#   be omitted from a screen just by commenting it out here, particular
#   for text fields.
#
#   Top-level entries within this A_LAYOUT table MUST have names that
#   correspond to the ALAYOUT_NAMES list specified earlier in this
#   file.
#
#   New top-level content requires corresponding changes to
#   audio_screens().  If a completely new text field is desired, then
#   the JSON-RPC call made in update_display() needs to be updated as
#   well.
#
#   All entries within the "fields" array below correspond to text
#   fields, with the 'name' key generally corresponding to one of the
#   retrieved InfoLabels.  Each entry is a little dictionary that can
#   specify the following entries:
#
#      posx     X-coordinate for display (horizontal position)
#      posy     Y-coordinate for display (vertical position)
#      font     Font to use for rendering
#      fill     Text color
#
#      dynamic  A boolean flag to true/1 to indicate that the
#               field should be considered dynamic, re-drawn
#               upon every update loop.
#
#      prefix   Optional string ahead of InfoLabel text
#      suffix   Optional string following InfoLabel text
#
#      format_str Alternatively, rather than using prefix and suffix,
#                 one has the option of using a format_str.  The
#                 string should contain one or more InfoLabels to
#                 substitute, enclosed within curly braces.  See the
#                 status layout screen text fields for examples.
#
#      trunc    Flag indicating that single line string should
#               truncated at the right-hand edge of the display
#
#      wrap     Flag indication that the string should be wrapped.
#               When wrapping, further information is needed...
#
#      max_width  Maximum horizontal width string can occupy
#      max_lines  Maximum number of lines to occupy; additional
#                 text gets truncated on the final line
#
#      label    Separate text to display, with an independent
#               font and independent fill color, when the InfoLabel
#               is non-empty.  Labels require several additional
#               keys, all of which start with "l".  These are
#               still keys at the same level in the field's
#               dictionary.
#
#      lposx    Horizontal position for label string
#      lpoxy    Vertical position for label string
#      lfont    Font for label string
#      lfill    Font fill color for label string
#
#
#   Special treatment exists for the 'codec' and 'artist' text fields.
#
# --------------------------------------------------------------------

#
# Default audio info screen
#

[A_LAYOUT.A_DEFAULT.thumb]   # Artwork
posx = 3
posy = 4
size = 300
# If artwork is smaller than the above size, should it be centered
# where the fullsize artwork would have been placed?
center_sm = 1

[A_LAYOUT.A_DEFAULT.prog]    # Progress Bar
posx   = 320     # upper-left corner x position
posy   = 5       # upper-left corner y position
height = 12      # pixel height
short_len = 194  # length when elapsed time matches 00:00 (min, seconds)
long_len  = 300  # length when elapsed time matches 00:00:00 (hrs, mins, seconds)
color_fg = "color_7S"
color_bg = "color_gray"

[[A_LAYOUT.A_DEFAULT.fields]]
name = "MusicPlayer.Time"
posx = 320
posy = 29
font = "font7S"
fill = "color_7S"
dynamic = 1

[[A_LAYOUT.A_DEFAULT.fields]]
name = "MusicPlayer.TrackNumber"
posx = 320
posy = 132
font = "font7S"
fill = "color_7S"
  # Label only appears if the field is present and non-empty
  label = "Track"
  lposx = 320
  lposy = 104
  lfont = "font_tiny"
  lfill = "white"

#
# This group of fields all appear to the right of the cover art
# and track number, in a small font.
#

# The duration NEVER has decending characters, so it can be somewhat
# closer to the next row
[[A_LAYOUT.A_DEFAULT.fields]]
name = "MusicPlayer.Duration"
posx = 450
posy = 104
font = "font_tiny"
fill = "white"

[[A_LAYOUT.A_DEFAULT.fields]]
name = "full_codec"   # special treatment in audio_screens()
posx = 450
posy = 132
font = "font_tiny"
fill = "white"




# NOTE: For UPnP/DLNA playback, Kodi Leia doesn't seem to capture
#   dc:date.  Fortunately, the InfoLabel is left blank, unlike what
#   happens for videos.
[[A_LAYOUT.A_DEFAULT.fields]]
name = "achannelnumber"
posx = 450
posy = 168
font = "font_tiny"
fill = "white"
suffix = "Ch"

[[A_LAYOUT.A_DEFAULT.fields]]
name = "MusicPlayer.Genre"
posx = 450
posy = 160
font = "font_tiny"
fill = "white"
trunc = 1

# NOTE: For UPnP/DLNA playback, Kodi Leia doesn't seem to capture
#   dc:date.  Fortunately, the InfoLabel is left blank, unlike what
#   happens for videos.
[[A_LAYOUT.A_DEFAULT.fields]]
name = "MusicPlayer.PlaylistLength"
posx = 320
posy = 200
font = "font_tiny"
fill = "white"
prefix = "/"

#
# Finally, the track title in this layout appears below the cover art...
#

[[A_LAYOUT.A_DEFAULT.fields]]
name  = "MusicPlayer.Title"
posx  = 4
posy  = 410
font  = "font_bold"
fill  = "white"
trunc = 1

#
# ... while the album title and artist are moved over to the right of
# the cover.
#

[[A_LAYOUT.A_DEFAULT.fields]]
name  = "artist"   # special treatment in audio_screens()
posx  = 4
posy  = 350
font  = "font_sm"
fill  = "color_artist"
trunc = 1
drop_unknown = 1

[[A_LAYOUT.A_DEFAULT.fields]]
name  = "MusicPlayer.Album"
posx  = 4
posy  = 380
format_str = "({MusicPlayer.Year}) {MusicPlayer.Album}"
font  = "font_sm"
fill  = "white"
wrap  = 1
max_width = 630
max_lines = 1



# --------------------------------------------------------------------
#
# Fullscreen artwork (by itself)
#

[A_LAYOUT.A_FULLSCREEN.thumb]
center = 1
size = 480


# --------------------------------------------------------------------
#
# Fullscreen artwork with progress bar
#
[A_LAYOUT.A_FULL_PROG.thumb]
center = 1
size = 480

[A_LAYOUT.A_FULL_PROG.prog]
vertical = 1
posx = 786    # upper-left corner x-position
posy = 1      # upper-left corner y-position
len  = 11     # pixel width for a vertical bar
height = 476  # total height for the vertical bar
color_fg = "color_7S"
color_bg = "color_gray"

# --------------------------------------------------------------------
#
# The A_NOTIME screen servers primarily as an example, It is similar
# to the default (audio) info screen, but without the elapsed time
# display.
#

[A_LAYOUT.A_NOTIME.thumb]   # Artwork
posx = 3
posy = 4
size = 405
center_sm = 1

[A_LAYOUT.A_NOTIME.prog]    # Progress Bar
posx   = 380     # upper-left corner x position
posy   = 12      # upper-left corner y position
height = 11       # pixel height
short_len = 300  # length when elapsed time matches 00:00 (min, seconds)
long_len  = 300  # length when elapsed time matches 00:00:00 (hrs, mins, seconds)
color_fg = "color_7S"
color_bg = "color_gray"

[[A_LAYOUT.A_NOTIME.fields]]
name = "MusicPlayer.TrackNumber"
posx = 420
posy = 58
font = "font7S"
fill = "color_7S"
  # Label only appears if the field is present and non-empty
  label = "Track"
  lposx = 420
  lposy = 30
  lfont = "font_tiny"
  lfill = "white"

#
# This group of fields all appear to the right of the cover art
# and track number, in a small font.
#

[[A_LAYOUT.A_NOTIME.fields]]
name = "MusicPlayer.Duration"
posx = 580
posy = 30
font = "font_tiny"
fill = "white"

[[A_LAYOUT.A_NOTIME.fields]]
name = "codec"   # special treatment in audio_screens()
posx = 580
posy = 58
font = "font_tiny"
fill = "white"

[[A_LAYOUT.A_NOTIME.fields]]
name = "MusicPlayer.Genre"
posx = 580
posy = 86
font = "font_tiny"
fill = "white"
trunc = 1

# NOTE: For UPnP/DLNA playback, Kodi Leia doesn't seem to capture
#   dc:date.  Fortunately, the InfoLabel is left blank, unlike what
#   happens for videos.
[[A_LAYOUT.A_NOTIME.fields]]
name = "MusicPlayer.Year"
posx = 580
posy = 114
font = "font_tiny"
fill = "white"


#
# Finally, the track title in this layout appears below the cover art...
#

[[A_LAYOUT.A_NOTIME.fields]]
name  = "MusicPlayer.Title"
posx  = 4
posy  = 410
font  = "font_bold"
fill  = "white"
trunc = 1


#
# ... while the album title and artist are moved over to the right of
# the cover.
#

[[A_LAYOUT.A_NOTIME.fields]]
name  = "artist"   # special treatment in audio_screens()
posx  = 420
posy  = 240
font  = "font_sm"
fill  = "color_artist"
trunc = 1


[[A_LAYOUT.A_NOTIME.fields]]
name  = "MusicPlayer.Album"
posx  = 420
posy  = 280
font  = "font_sm"
fill  = "white"
wrap  = 1
max_width = 375
max_lines = 4


# --------------------------------------------------------------------
# Video Screens
#
#   This data structure gets used by video_screens() to control the
#   layout and contents of any audio information screens.  Content can
#   be omitted from a screen just by commenting it out here, particular
#   for text fields.
#
#   Top-level entries within this V_LAYOUT table MUST have names that
#   correspond to the VLAYOUT_NAMES list specified earlier in this
#   file.
#
#   New top-level content requires corresponding changes to
#   video_screens().  If a completely new text field is desired, then
#   the JSON-RPC call made in update_display() needs to be updated as
#   well.
#
#   Special treatment may exist for text fields within video_screens()
#
# --------------------------------------------------------------------
[shared_element.time]
name = "VideoPlayer.Time"
posx = 330
posy = 31
font = "font7S"
fill = "color_7S"
dynamic = 1

[shared_element.duration]
name = "VideoPlayer.Duration"
posx = 330
posy = 104
font = "font7S"
fill = "color_7S"

[shared_element.vtitle]
name  = "VideoPlayer.Title"
posx  = 4
posy  = 400
font  = "font_bold"
fill  = "color_7S"
wrap  = 1
max_width = 635
max_lines = 1

[shared_element.chapter]
name  = "Player.chapter"
format_str = "chapter {Player.chapter}/{Player.chaptercount} {Player.chaptername} "
posx  = 340
posy  = 180
font  = "font_tiny"
fill  = "color_7S"
dynamic = 1

[shared_element.vcodec]
name = "vcodec"   # special treatment in audio_screens()
posx = 340
posy = 200
font = "font_tiny"
fill = "color_7S"
prefix= "Video Codec "

[shared_element.resolution]
name = "VideoPlayer.VideoResolution"
posx = 400
posy = 200
font = "font_tiny"
fill = "color_7S"
format_str = "{VideoPlayer.VideoResolution}p {VideoPlayer.VideoCodec}"


[shared_element.acodec]
name = "VideoPlayer.Title"   # special treatment in audio_screens()
posx = 375
posy = 220
font = "font_tiny"
fill = "color_7S"
format_str = " {acodec} test {vchannelnumber}"


[shared_element.vchannelnumber]
name = "vchannelnumber"
posx = 340
posy = 220
font = "font_tiny"
fill = "color_7S"


[shared_element.vplaycount]
name = "VideoPlayer.PlayCount"
posx = 340
posy = 280
font = "font_tiny"
fill = "color_7S"
prefix = "Play count: "
suffix = ""

[shared_element.finishtime]
name = "Player.FinishTime"
posx = 340
posy = 300
font = "font_tiny"
fill = "color_7S"
prefix = "End "
suffix = ""
dynamic = 1

#
[shared_element.progress_bar]
posx   = 330     # upper-left corner x position
posy   = 7       # upper-left corner y position
height = 15       # pixel height
short_len = 194  # length when elapsed time matches 00:00 (min, seconds)
long_len  = 300  # length when elapsed time matches 00:00:00 (hrs, mins, seconds)
color_fg = "color_7S"
color_bg = "color_gray"
#
# Default video info
#
################################ DEFAULT ##################################
[V_LAYOUT.V_DEFAULT.thumb]   # artwork / movie poster
posx = 0
posy = 0
width  = 320
height = 480
center_sm = 1

[V_LAYOUT.V_DEFAULT.prog]    # Progress Bar
shared_element = "progress_bar"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "time"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "duration"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "vtitle"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "chapter"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "vcodec"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "resolution"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "acodec"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "vchannelnumber"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "vplaycount"
[[V_LAYOUT.V_DEFAULT.fields]]
shared_element = "finishtime"


[[V_LAYOUT.V_DEFAULT.fields]]
name = "System.Time(hh:mm:ss)"
posx = 480
posy = 300
font = "font_tiny"
fill = "color_7S"
dynamic = 1


[[V_LAYOUT.V_DEFAULT.fields]]
name = "System.Date"
posx = 5
posy = 170
format_str = "{System.Date}, {System.Time}"
font = "font_tiny"
fill = "color_7S"
dynamic = 1

[[V_LAYOUT.V_DEFAULT.fields]]
name = "System.Uptime"
posx = 5
posy = 200
format_str = "Up: {System.Uptime}"
font = "font_tiny"
fill = "color_7S"
dynamic = 1

[[V_LAYOUT.V_DEFAULT.fields]]
name = "System.TotalUptime"
posx = 5
posy = 230
format_str = "total: {System.TotalUptime}"
font = "font_tiny"
fill = "color_7S"
dynamic = 1
wrap  = 1
max_width = 300
max_lines = 1

[[V_LAYOUT.V_DEFAULT.fields]]
name = "System.CPUTemperature"
posx = 5
posy = 260
format_str = "CPU: {System.CPUTemperature}, {System.CpuFrequency}"
font = "font_tiny"
fill = "color_7S"
dynamic = 1

[[V_LAYOUT.V_DEFAULT.fields]]
name = "Weather.Temperature"
posx = 5
posy = 280
format_str = "{Weather.Conditions}, {Weather.Temperature}"
font = "font_tiny"
fill = "color_7S"
dynamic = 1

################################ PVR ##################################
[V_LAYOUT.V_PVR.prog]    # Progress Bar
shared_element = "progress_bar"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "time"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "duration"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "vtitle"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "chapter"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "vcodec"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "resolution"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "acodec"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "vchannelnumber"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "vplaycount"
[[V_LAYOUT.V_PVR.fields]]
shared_element = "finishtime"

[[V_LAYOUT.V_PVR.fields]]
name = "Player.FinishTime"
posx = 340
posy = 340
font = "font_tiny"
fill = "color_7S"
format_str = "PVR      Current: {System.Time}"
dynamic = 1

################################ LIVE TV ##################################
[V_LAYOUT.V_LIVETV.prog]    # Progress Bar
shared_element = "progress_bar"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "time"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "duration"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "vtitle"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "chapter"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "vcodec"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "resolution"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "acodec"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "vchannelnumber"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "vplaycount"
[[V_LAYOUT.V_LIVETV.fields]]
shared_element = "finishtime"

[[V_LAYOUT.V_LIVETV.fields]]
name = "Player.FinishTime"
posx = 340
posy = 340
font = "font_tiny"
fill = "color_7S"
prefix = "Live TV "
suffix = ""
dynamic = 1

################################ TV SHOWS ##################################
[V_LAYOUT.V_TV_SHOW.prog]    # Progress Bar
shared_element = "progress_bar"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "time"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "duration"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "vtitle"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "chapter"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "vcodec"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "resolution"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "acodec"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "vchannelnumber"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "vplaycount"
[[V_LAYOUT.V_TV_SHOW.fields]]
shared_element = "finishtime"

[[V_LAYOUT.V_TV_SHOW.fields]]
name = "Player.FinishTime"
posx = 340
posy = 340
font = "font_tiny"
fill = "color_7S"
prefix = "série "
suffix = ""
dynamic = 1

################################ MOVIES ##################################
[V_LAYOUT.V_MOVIE.prog]    # Progress Bar
shared_element = "progress_bar"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "time"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "duration"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "vtitle"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "chapter"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "vcodec"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "resolution"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "acodec"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "vchannelnumber"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "vplaycount"
[[V_LAYOUT.V_MOVIE.fields]]
shared_element = "finishtime"



[[V_LAYOUT.V_MOVIE.fields]]
name = "Player.FinishTime"
posx = 340
posy = 340
font = "font_tiny"
fill = "color_7S"
prefix = "movie "
suffix = ""
dynamic = 1

[V_LAYOUT.V_MOVIE.thumb]   # artwork / movie poster
posx = 0
posy = 0
width  = 320
height = 480
center_sm = 1

# Fullscreen movie poster only
#

[V_LAYOUT.V_FULLSCREEN.thumb]   # artwork / movie poster
width  = 320
height = 480
center = 1



# --------------------------------------------------------------------
# Status Screen Content
#
#   Similar to audio layout above, but used for the status screen
#   that appears following a screen touch when idle.  The screen
#   gets drawn by status_screen().
#
#   Special treatment exists for several field names
#
################################ STATUS ##################################

[STATUS_LAYOUT.thumb]   # Kodi logo
posx = 5
posy = 5
size = 128

[[STATUS_LAYOUT.fields]]
name = "version"        # special treatment
posx = 145
posy = 8
font = "font_main"
fill = "color_artist"


[[STATUS_LAYOUT.fields]]
name = "summary"        # special treatment
posx = 145
posy = 40
font = "font_main"
fill = "white"


# The remaining fields all get populated via a special JSON-RPC query
# to Kodi specifically for the status screen.

[[STATUS_LAYOUT.fields]]
name = "System.Time(hh:mm:ss)"
posx = 250
posy = 80
font = "font7S"
fill = "color_7S"
dynamic = 1

[[STATUS_LAYOUT.fields]]
name = "System.TotalUptime"
posx = 5
posy = 240
format_str = "Total: {System.TotalUptime}"
font = "font_sm"
fill = "white"
dynamic = 1
wrap  = 1
max_width = 300
max_lines = 1


[[STATUS_LAYOUT.fields]]
name = "Weather.Temperature"
posx = 5
posy = 310
format_str = "{Weather.Conditions}, {Weather.Temperature}"
font = "font_sm"
fill = "white"
dynamic = 1

[[STATUS_LAYOUT.fields]]
name = "System.Date"
posx = 5
posy = 170
format_str = "{System.Date}, {System.Time}"
font = "font_sm"
fill = "white"

[[STATUS_LAYOUT.fields]]
name = "System.Uptime"
posx = 5
posy = 210
format_str = "Up: {System.Uptime}"
font = "font_sm"
fill = "white"
dynamic = 1

[[STATUS_LAYOUT.fields]]
name = "System.CPUTemperature"
posx = 5
posy = 280
format_str = "CPU: {System.CPUTemperature}, {System.CpuFrequency}"
font = "font_sm"
fill = "white"

[[STATUS_LAYOUT.fields]]
name = "kodi_version"  # special treatment
posx = 5
posy = 340
font = "font_sm"
fill = "white"

[[STATUS_LAYOUT.fields]]
name = "PVR.BackendDiskSpace"
posx = 5
posy = 400
font = "font_sm"
fill = "white"
prefix= "Nas: "

[[STATUS_LAYOUT.fields]]
name = "PVR.BackendRecordings"
posx = 5
posy = 370
format_str = "Recordings: {PVR.BackendRecordings} Coming: {PVR.BackendTimers}"
font = "font_sm"
fill = "white"
dynamic = 0
